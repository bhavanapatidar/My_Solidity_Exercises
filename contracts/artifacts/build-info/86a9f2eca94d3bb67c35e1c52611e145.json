{
	"id": "86a9f2eca94d3bb67c35e1c52611e145",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Exercise4.sol": {
				"content": "\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n/* Function Overloading\r\n\r\nYou can have multiple definitions for the same function name in the same scope.\r\nthe definition of the function must differ from each other by the types and/or the number of arguements in the arguement list.\r\nyou can overload function declarations the differ only by return type \r\n*/\r\n\r\ncontract FunctionOverloading{\r\n\r\n    // function x(uint lightSwitch, uint wallet) public{\r\n\r\n    // }\r\n\r\n    // function x(uint wallet)public{\r\n\r\n    // }\r\n\r\n    \r\n}\r\n/*\r\nExercise:\r\n1. Create two functions with the same name that return the sum of their arguements-\r\n2. one function which takes two arguements and another function which takes three arguements.\r\n\r\n3. Create two other functions which can call each sum function and return their various sums .\r\n4. Depoy successfully deploy contract andd test results of overloading functions.\r\n\r\n*/\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Exercise4.sol": {
				"FunctionOverloading": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Exercise4.sol\":386:551  contract FunctionOverloading{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Exercise4.sol\":386:551  contract FunctionOverloading{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200d3d07650e269409c2c1dbb350eb7b51fadb082bdcab682a41a73f78fbc29aac64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea26469706673582212200d3d07650e269409c2c1dbb350eb7b51fadb082bdcab682a41a73f78fbc29aac64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD RETURNDATASIZE SMOD PUSH6 0xE269409C2C1 0xDB 0xB3 POP 0xEB PUSH28 0x51FADB082BDCAB682A41A73F78FBC29AAC64736F6C634300081A0033 ",
							"sourceMap": "386:165:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea26469706673582212200d3d07650e269409c2c1dbb350eb7b51fadb082bdcab682a41a73f78fbc29aac64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD RETURNDATASIZE SMOD PUSH6 0xE269409C2C1 0xDB 0xB3 POP 0xEB PUSH28 0x51FADB082BDCAB682A41A73F78FBC29AAC64736F6C634300081A0033 ",
							"sourceMap": "386:165:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 386,
									"end": 551,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 386,
									"end": 551,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 386,
									"end": 551,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 386,
									"end": 551,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 386,
									"end": 551,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 386,
									"end": 551,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 386,
									"end": 551,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 551,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 386,
									"end": 551,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 551,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 386,
									"end": 551,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 386,
									"end": 551,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 551,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 386,
									"end": 551,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 386,
									"end": 551,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 551,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 386,
									"end": 551,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 551,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 551,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 386,
									"end": 551,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 551,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200d3d07650e269409c2c1dbb350eb7b51fadb082bdcab682a41a73f78fbc29aac64736f6c634300081a0033",
									".code": [
										{
											"begin": 386,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 386,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 386,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 386,
											"end": 551,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/Exercise4.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Exercise4.sol\":\"FunctionOverloading\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Exercise4.sol\":{\"keccak256\":\"0xc3d0560b0f36e3abed71c73b46835ba7280303dcf3676c10553271302b67266a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c31dca0c6db3563cf49a79312dfc30e9c35485289f52a5e3c2b9b6cfbc9dbfb\",\"dweb:/ipfs/QmW7uPNgJWQNBeWTZvTdd6U1FoLnPXRi6YGF7HuS9osvTN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Exercise4.sol": {
				"ast": {
					"absolutePath": "contracts/Exercise4.sol",
					"exportedSymbols": {
						"FunctionOverloading": [
							2
						]
					},
					"id": 3,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FunctionOverloading",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "FunctionOverloading",
							"nameLocation": "395:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "386:165:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:898:0"
				},
				"id": 0
			}
		}
	}
}